5/11
if_home slider else bcrumbs
unify->app?


5/9 d disable stheme -

- installed apps
- middleware
- comment out templates mods with:
  - template loader(s)
  - app_dirs:true (was false)
- move new installed_apps (with home/tempates) to front


5/5, 5/6
move base to root /templates (or multi-theme structure like tlg2)
pause stheme
make list of transformations in stheme/reamde

Org founded year, org name, org Facebook, org Twitter, Etc
Org blurb or Org description

Menu structure
org-tweets
Org contacts or phone
org location

d Org about1, 2

Check mezzanine login and user profile Pages, for replacement for uSerena

d Download and check in unify 1.94

idea: themes/ app, to allow switching (or host mappings) only, no xformations


5/4/16
stheme notes -
operations are:
- run once, to extract
- run on every theme update
- run on signal, of db change

p ORG_ mezz options

Still need way to test dev, prod versions of each theme, no?

* need to save base.html somewhere and check in, *or* backport changes to the stheme/operations


eRacks vision of the portable data center.
Quickly deployable, portable / deliverable by truck or helicopter, can be deployed anywhere from a parking lot to a rooftop

- Up to 18 internal racks for a 20' container
- No water-cooling required
- a fraction of the cost of competititive products
- Apply power & go


4/8
Upd issues:
shahzad: FLASH24, 48; redo old models -
- floppies
- drives under 1T
- QUIET 1U

Productor - Upwork

Lenovo 900, LG Gram
chromestick, chromebook chrubu etc

plex, mythtv models

PRs - fiverr

try freelancer - project -


3/5
engine -
  python - capture print, like sh or management commands
  compile templates in place

unify 1.9.1 merge & upload

Thinking: Footer:
- where do you want to edit it? On extract / save-once, in Minaml, html, obdject, or?
- conceptuals: about1, about2, posts, links, Contact, copyright, social

upwork, freelancer
- social marketing
- mailouts
- repost lazarus or QT

shahzad: FLASH24, 48; redo old models -
- floppies
- drives under 1T
- QUIET 1U

Lenovo 900?


3/1
footer - yuk - strip comments?  Extract better?


2/29
prepare, p extract, compile


2/28
Synaptic is really in need -

Startup idea: (Similar to Chuck White's & my OSS ideas, but more specific):
- Web-based social synaptic replacement
- date of last (meaningful) activity
- activity rating, 1-10 or smth
- reviews, ratings, comments - social!
- alternatives, additional / complementary tools/projects
- one-click installs
- make / dev envo


2/21
d urls
- utils app?

p home page app?

d resize logo
footer mnu


Modularize stheme configs/actions - config contains string substs for site / brand identity:
TLG config
Libre hosting config
JW.VC config
rcyl or reconcile config for hosted attic backups etc
osdf config,

Then theme actions:

unify prepare - canonicalization
unify extract - one time extractions
unify compile - ongoing compilations with possible event triggers aka signals


2/20
Mezz:
- missing some basic admin stuff
- no filebrowser
- basic stuff!
- where to edit menus?


2/13
Andy(!)
CVS
Adventure
eRacks dev, pull?

2/10
Fri 10am Michael Lee 333 w sclara st #610

Lender fraud attorney
lender malfeasance
lender overreach
lender revolving door


2/5
config - text substs
decls - ops substs

subdir for themne ops?
config-mezzanine  # blocks, django templ repls
config
declarations-unify  # tweaks to decls
declarations
prepare-unify  # canonicalize - to /prepared
extract-unify  # done once - extract bits to /src
base or templates - save new templates
compile-unify or templates-unify - save theme-specific tmplts

accumulate body-top like styles, scripts

... after run:

python block - capture print, like i've done elsewhere

ok to mix decls & config, just be sure to separate mezz & theme

use selector sntx for selenium scripter / scraper
PDF scraper - tabula, check CLI


2/4
=> sls or idem:
./manage.py createsuperuser --noinput --username joe --email joe@eracks.com

then
./manage.py changepassword :)

Possible load class:
class OpsConstructor:
  class_map = dict (
    css=self.checkCssClasses,
    html=self.checkHtmlClasses,
    yaml=lambda x:y, YamlOperations,
  )

  def checkCssClasses (self, keys):
    if keys [0] == 'read':
      return FileOperations
    elif keys [0] == 'load':
      return CssOperations (k, v)
    elif keys [0] == 'stylus':
      return CssCompileOperations (k, v)
  elif ext == 'html':
    #if isinstance (v, (str, unicode)) or 'minaml' in v:
    if k.startswith ('$theme_path'):
      return HtmlPyqueryExtractOperations (k, v)  # extract only, no finalize / save
    elif v.keys() [0] in ['minaml', 'compile']:
      return HtmlTempletOperations (k, v)
    elif v.keys() [0] == 'load':
      return HtmlPyqueryOperations (k, v)
    else:
      raise Exception ('NYI')

  etc

  def construct (k,v):
    return class_map [ext] (v.keys()) (k,v)

  too convoluted, I like the linear function better..
  only advantage is you can have if ext in OpsConstructor.class_map in unknown()


1/30
d fix config recursion (lose need for ---, load by line), overlay subsequent calls
d simplify - just import config first
doctype, preamble => config

~ apply_templates (s, config) - support multiple templates


1/29
attr spouting &quot;
a: change to sgl '
long term: deal w/xml save routines

file structure:
- decarations-unify

want meta-variables to replace for template template -

need to define interface points, and app/site-specific replacements - eg,

- head stuff (title, meta()desc, key, etc), identifiers (google, bing, etc)
- navbar
  - phone #, email
  - login
  - main menu
  - other menus
- footer
- content (1, 2, 0 columns)
- sidebar

--- after run

replacements:
  title: ..
  meta:
    title: ..
    author: ..
    description: ..
    Keywords: ..
  verify:
    google: ..
    bing: ..


1/26 tues
made some good notes at St John's last night, too-


1/25/16
top-level file is already there, themes.yaml


1/18/16
rename generic-templates to smth like stheme-list or yaml-list - top-level hit-list
rename generic-declarions also -
 - need smth like process-head, process-navbar, etc - or better, prepare-head, prepare-navbar, etc


8/19/15

inverted-tree docs embedded in page for toplevel stheme items

width: 100% for customers
 - legacy-theme
 - tshop?
 - generic?

d amadeus: templets.py too
